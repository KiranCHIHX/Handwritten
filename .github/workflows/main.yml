name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
###########################################################    
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       aws-region: ap-south-1

#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
###########################################################
    - name: Build, tag, and push image to Amazon ECR
      env:
####################################
        #ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #ECR_REPOSITORY: handwritten-testing
###############################
        IMAGE_TAG: handwritten-testing-image
      run: |

        docker build -t $IMAGE_TAG .
        docker run -p 8999:80 handwritten-testing-image
########docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
########docker build -t $IMAGE_TAG .
#########################################################
###########################docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
############################## ############################
       
       
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Newman
      run: |
        npm install -g newman
        adress=$(hostname -i)

    - name: Run API tests
      env:
        BASE_URL: https://adress:8999
        API_KEY: ${{ secrets.API_KEY }}
      run: newman run collection.json --global-var "api_key=$API_KEY" --global-var "base_url=$BASE_URL"
